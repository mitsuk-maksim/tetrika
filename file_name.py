# 1) Отсортировать все имена в лексикографическом порядке
# 2) Посчитать для каждого имени алфавитную сумму – сумму порядковых номеров букв (MAY: 13 + 1 + 25 = 39)
# 3) Умножить алфавитную сумму каждого имени на порядковый номер имени в отсортированном списке (индексация начинается с 1). Например, если MAY находится на 63 месте в списке, то результат для него будет 63 * 39 = 2457.
# 4) Просуммировать произведения из третьего пункта по всем именам из файла.

with open('names.txt', 'r') as f:
    all_name = f.read()
    # разбиваем строку по запятой
    name_mas = all_name.split(",")
    # избавляемся от ""
    name_mas = [ch[1:len(ch)-1] for ch in name_mas]

    # 1) Отсортировать все имена в лексикографическом порядке
    name_mas.sort()
    # 2) Посчитать для каждого имени алфавитную сумму – сумму порядковых номеров букв (MAY: 13 + 1 + 25 = 39)
    i = 1  # порядковый номер
    multiplicat_sum = 0  # сумма всех произведений
    for name in name_mas:
        alp_sum = 0
        for chr in name:
            alp_sum += ord(chr) - 64 # Т.к. в ASCII буквы начинаются с 65 номера. Все буквы заглавные, поэтому ничего преобразовывать не нужно
        # 3) Умножить алфавитную сумму каждого имени на порядковый номер имени в отсортированном списке (индексация начинается с 1). Например, если MAY находится на 63 месте в списке, то результат для него будет 63 * 39 = 2457.
        multiplicat = alp_sum * i
        # 4) Просуммировать произведения из третьего пункта по всем именам из файла.
        multiplicat_sum += multiplicat
        i += 1
        # print('_'*20)

    print(multiplicat_sum)

# Результат из 4го пунтка = 871853874

